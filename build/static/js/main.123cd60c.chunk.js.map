{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","Date","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","onSaveExpensneData","enteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.123cd60c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes ='card ' + props.className;\r\n\r\nreturn <div className={classes}>{props.children}</div>;\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  \r\nconst changeHandler = (event) => {\r\n\r\n  props.onChangeFilter(event.target.value);\r\n  \r\n\r\n};\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={changeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\nimport React from 'react';\r\n\r\nconst  ExpenseDate = (props )=> {\r\n\r\nconst month=props.date.toLocaleString('en-US', { month: 'long'});\r\nconst day=props.date.toLocaleString('en-US', {day: '2-digit'});\r\nconst year=props.date.getFullYear();\r\n\r\n\r\n\r\nreturn (\r\n<div className=\"expense-date\">\r\n<div className=\"expense-date__month\">{month}</div>\r\n<div className=\"expense-date__year\">{year}</div>\r\n<div className=\"expense-date__day\">{day}</div>\r\n\r\n</div>\r\n);\r\n\r\n}\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst  ExpenseItem = (props) => {\r\n\r\n    return (\r\n       <li>\r\n    <Card className='expense-item'>\r\n          <ExpenseDate date={props.date} />\r\n           <div className='expense-item__description'>\r\n             <h2>{props.title}</h2>\r\n             <div className='expense-item__price'>${props.amount} </div>\r\n          </div>\r\n       </Card>\r\n       </li>\r\n    );\r\n}\r\nexport default ExpenseItem;","\r\nimport React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\n\r\nconst ExpensesList= (props) =>{\r\n    if(props.items.length === 0)\r\n    {\r\n    return <h2 className='expenses-list__fallback'> Found not Expenses.</h2>;\r\n    }\r\n\r\nreturn ( \r\n\r\n       <ul className='expenses-list ' >\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n           key={expense.id}\r\n        title={expense.title} \r\n       amount={expense.amount}\r\n        date={expense.date}\r\n        \r\n        />\r\n        ))}\r\n    \r\n</ul>\r\n);    \r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) =>\r\n{\r\nlet barFillHeight= '0%';\r\nif(props.maxValue>0)\r\n{\r\n    barFillHeight=Math.round((props.value / props.maxValue) * 100) + '%';\r\n\r\n\r\n}\r\n    return (\r\n    <div className=\"chart-bar\">\r\n     <div className=\"chart-bar__inner\">\r\n    <div className=\"chart-bar__fill\" style={{height: barFillHeight}}> </div>\r\n\r\n    </div>\r\n    <div className=\"chart-bar__label\">\r\n        {props.label}\r\n        </div>\r\n\r\n   \r\n\r\n    </div>\r\n\r\n    );\r\n\r\n    \r\n\r\n\r\n};\r\n\r\n\r\nexport default ChartBar","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props)=>{\r\n const dataPointValues=props.dataPoints.map(dataPoint =>dataPoint.value);\r\n\r\nconst totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return <div className=\"chart\">\r\n\r\n   {props.dataPoints.map(dataPoint=> (\r\n   <ChartBar\r\n   key={dataPoint.label}\r\n    value={dataPoint.value} \r\n    maxValue={totalMaximum} \r\n   label={dataPoint.label}/>\r\n\r\n   ))}\r\n   \r\n\r\n\r\n    </div>\r\n\r\n};\r\n\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\n\r\nconst ExpensesChart = props =>\r\n{\r\n    const chartDataPoints=[\r\n    \r\n            {label: 'Jan', value:0},\r\n            {label: 'Feb', value:0},\r\n            {label: 'Mar', value:0},\r\n            {label: 'Apr', value:0},\r\n            {label: 'May', value:0},\r\n            {label: 'Jun', value:0},\r\n            {label: 'Jul', value:0},\r\n            {label: 'Aug', value:0},\r\n            {label: 'Sep', value:0},\r\n            {label: 'Oct', value:0},\r\n            {label: 'Nov', value:0},\r\n            {label: 'Oct', value:0},\r\n\r\n    ];\r\n\r\n    for(const expense of props.expenses)\r\n    {\r\n        const expenseMonth=expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n\r\n    }\r\nreturn (\r\n<Chart dataPoints={chartDataPoints}/>\r\n)\r\n};\r\n\r\nexport default ExpensesChart;","import React ,{useState} from 'react';\r\nimport  Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\n\r\n\r\nconst  Expenses= (props)=> {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  \r\n\r\n    const filterChangeHandler= (selectedYear) =>{\r\n\r\n      setFilteredYear(selectedYear);\r\n    }\r\n  \r\n\r\n  const filteredExpenses= props.items.filter(expense => {\r\n\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n\r\n  });\r\n\r\n\r\n return (\r\n   <div>\r\n    \r\n     <Card className='expenses'>\r\n      <ExpensesFilter \r\n      selected = {filteredYear}\r\n       onChangeFilter={filterChangeHandler}\r\n       />\r\n       <ExpensesChart expenses={filteredExpenses}/>\r\n     <ExpensesList items={filteredExpenses}/>\r\n    \r\n    </Card>\r\n</div>\r\n );\r\n};\r\n\r\nexport default Expenses;","import React ,{useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\n\r\nconst ExpenseForm =(props) =>{\r\n\r\n    const [enteredTitle, setEnteredTitle]= useState('');   //  שימוש 3 פעמים ביוזסטייט יש אפשרות להשתמש בפעם אחת לדוגמא למטה מסומן בכוכבית **\r\n    const [enteredAmount, setEnteredAmount]= useState('');\r\n    const [enteredDate, setEnteredDate]= useState('');\r\n      \r\n   // const [userInput,setUserInput]= useState({\r\n        //enteredTitle:'',\r\n       // enteredAmount:'',\r\n       // enteredDate:'',\r\n  //  });\r\n\r\n    const titleChangeHandler = (event)=>{\r\n        setEnteredTitle(event.target.value);\r\n\r\n       //  setUserInput({          ***\r\n       //   ...userInput,          ***\r\n       // enteredTitle :event.target.value,  ***\r\n\r\n        //setUserInput((prevState)=>{\r\n       // עוד דרך לבצע את ההכנס\r\n           // return{...prevState,enteredTitle:event.target.value};  ***\r\n      //  });\r\n  \r\n    };\r\n\r\n    const amountChangeHandler = (event) => {  \r\n        setEnteredAmount(event.target.value);\r\n        //setUserInput({     ***\r\n           //...userInput,    ***\r\n       //  enteredAmount :event.target.value,   ***\r\n      //  });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n       // setUserInput({   ***\r\n           // ...userInput, ***\r\n        // enteredDate :event.target.value, ***\r\n       // });\r\n      };\r\n\r\n   const sumbitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n        title: enteredTitle,\r\n        amount: +enteredAmount,\r\n        date: new Date(enteredDate),\r\n   };\r\n\r\n   //  props.onSaveExpensneData(expenseData);\r\n  //  setEnteredTitle('');\r\n   // setEnteredAmount('');\r\n   // setEnteredDate('');\r\n\r\n   };\r\n\r\n\r\nreturn (\r\n <form onSubmit={sumbitHandler} >\r\n    <div className=\"new-expense__controls\">\r\n     <div className=\"new-expense__control\">\r\n     <label>Title </label>\r\n\r\n     <input type='text'\r\n     value={enteredTitle}\r\n      onChange= {titleChangeHandler}/>\r\n     </div>\r\n\r\n     <div className=\"new-expense__control\">\r\n\r\n      <label>Amount</label>\r\n    <input type='number' min=\"0.01\" step=\"0.01\"\r\n    value={enteredAmount}\r\n     onChange={amountChangeHandler}/>\r\n\r\n    </div>\r\n\r\n    <div className=\"expense__controll\">\r\n  <label>Date</label>\r\n  <input type='date' min=\"2019-01-01\" max=\"2022-12-31\"\r\n value={enteredDate}\r\n\r\n  onChange={dateChangeHandler} />\r\n\r\n     </div>\r\n    </div>\r\n\r\n    <div className=\"new-expense__actions\">\r\n      <button type='button' onClick={props.onCancel}>Cancel</button>\r\n      <button type='sumbit'>Add Expense</button>\r\n\r\n    </div>\r\n</form>\r\n\r\n);\r\n}\r\n\r\nexport default ExpenseForm","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n const [isEditing, setIsEditing] = useState(false);\r\n\r\nconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\r\n    const expenseData = {\r\n       ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n  props.onAddExpense(expenseData);\r\n  setIsEditing(false);\r\n};\r\nconst startEditingHandler=() =>{\r\n  setIsEditing(true);\r\n}\r\nconst stopEditingHandler= () =>\r\n{\r\n  setIsEditing(false);\r\n}\r\nreturn (\r\n <div className=\"new-expense\">\r\n  {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n    \r\n{isEditing && <ExpenseForm onSaveExpensneData={saveExpenseDataHandler} \r\nonCancel={stopEditingHandler}/>}\r\n\r\n</div>\r\n\r\n\r\n)};\r\nexport default NewExpense","import React, {useState} from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from'./components/NewExpense/NewExpense';\n\n\n  const DUMMY_EXPENSES  = [\n    {\n  \n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst  App= ()=> {\n\n\n    const[expenses, setExpenses]=useState(DUMMY_EXPENSES)\n  const addExpenseHandler = expense => {\n\n  setExpenses(prevExpenses=> {\n    return [expense, ...prevExpenses];\n  });\n  };\n  \n  return (\n    <div>\n   <NewExpense onAddExpense={addExpenseHandler}/>\n   <Expenses items={expenses}/>\n    </div>\n  );\n  };\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}